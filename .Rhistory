canon <- cc(preds, outcome)
str(canon)
canon$cor^2
print(CCP::WilksLambda(canon$cor, n_vars, 1))
canon.p_perm <- p.perm(preds, outcome)
n <- 100
n_vars <- 40
outcome <- matrix(rnorm(n), ncol=1)
preds <-
matrix(rnorm(n * n_vars), ncol=n_vars, byrow=FALSE)
canon <- cc(preds, outcome)
str(canon)
canon$cor^2
print(CCP::WilksLambda(canon$cor, n_vars, 1))
canon.p_perm <- p.perm(preds, outcome)
n <- 100
n_vars <- 40
outcome <- matrix(rnorm(n), ncol=1)
preds <-
matrix(rnorm(n * n_vars), ncol=n_vars, byrow=FALSE)
canon <- cc(preds, outcome)
str(canon)
canon$cor^2
print(CCP::WilksLambda(canon$cor, n_vars, 1))
canon.p_perm <- p.perm(preds, outcome)
n <- 100
n_vars <- 40
outcome <- matrix(rnorm(n), ncol=1)
preds <-
matrix(rnorm(n * n_vars), ncol=n_vars, byrow=FALSE)
canon <- cc(preds, outcome)
str(canon)
canon$cor^2
print(CCP::WilksLambda(canon$cor, n_vars, 1))
canon.p_perm <- p.perm(preds, outcome)
n <- 100
n_vars <- 40
outcome <- matrix(rnorm(n), ncol=1)
preds <-
matrix(rnorm(n * n_vars), ncol=n_vars, byrow=FALSE)
canon <- cc(preds, outcome)
str(canon)
canon$cor^2
print(CCP::WilksLambda(canon$cor, n_vars, 1))
canon.p_perm <- p.perm(preds, outcome)
n <- 100
n_vars <- 40
outcome <- matrix(rnorm(n), ncol=1)
preds <-
matrix(rnorm(n * n_vars), ncol=n_vars, byrow=FALSE)
canon <- cc(preds, outcome)
str(canon)
canon$cor^2
print(CCP::WilksLambda(canon$cor, n_vars, 1))
canon.p_perm <- p.perm(preds, outcome)
n <- 100
n_vars <- 40
outcome <- matrix(rnorm(n), ncol=1)
preds <-
matrix(rnorm(n * n_vars), ncol=n_vars, byrow=FALSE)
canon <- cc(preds, outcome)
str(canon)
canon$cor^2
print(CCP::WilksLambda(canon$cor, n_vars, 1))
canon.p_perm <- p.perm(preds, outcome)
n <- 100
n_vars <- 40
outcome <- matrix(rnorm(n), ncol=1)
preds <-
matrix(rnorm(n * n_vars), ncol=n_vars, byrow=FALSE)
canon <- cc(preds, outcome)
str(canon)
canon$cor^2
print(CCP::WilksLambda(canon$cor, n_vars, 1))
canon.p_perm <- p.perm(preds, outcome)
n <- 100
n_vars <- 40
outcome <- matrix(rnorm(n), ncol=1)
preds <-
matrix(rnorm(n * n_vars), ncol=n_vars, byrow=FALSE)
canon <- cc(preds, outcome)
str(canon)
canon$cor^2
print(CCP::WilksLambda(canon$cor, n_vars, 1))
canon.p_perm <- p.perm(preds, outcome)
n <- 100
n_vars <- 40
outcome <- matrix(rnorm(n), ncol=1)
preds <-
matrix(rnorm(n * n_vars), ncol=n_vars, byrow=FALSE)
canon <- cc(preds, outcome)
str(canon)
canon$cor^2
print(CCP::WilksLambda(canon$cor, n_vars, 1))
canon.p_perm <- p.perm(preds, outcome)
n <- 100
n_vars <- 40
outcome <- matrix(rnorm(n), ncol=1)
preds <-
matrix(rnorm(n * n_vars), ncol=n_vars, byrow=FALSE)
canon <- cc(preds, outcome)
str(canon)
canon$cor^2
print(CCP::WilksLambda(canon$cor, n_vars, 1))
canon.p_perm <- p.perm(preds, outcome)
n <- 100
n_vars <- 40
outcome <- matrix(rnorm(n), ncol=1)
preds <-
matrix(rnorm(n * n_vars), ncol=n_vars, byrow=FALSE)
canon <- cc(preds, outcome)
str(canon)
canon$cor^2
print(CCP::WilksLambda(canon$cor, n_vars, 1))
canon.p_perm <- p.perm(preds, outcome)
n <- 100
n_vars <- 40
outcome <- matrix(rnorm(n), ncol=1)
preds <-
matrix(rnorm(n * n_vars), ncol=n_vars, byrow=FALSE)
canon <- cc(preds, outcome)
str(canon)
canon$cor^2
print(CCP::WilksLambda(canon$cor, n_vars, 1))
canon.p_perm <- p.perm(preds, outcome)
n <- 100
n_vars <- 40
outcome <- matrix(rnorm(n), ncol=1)
preds <-
matrix(rnorm(n * n_vars), ncol=n_vars, byrow=FALSE)
canon <- cc(preds, outcome)
str(canon)
canon$cor^2
print(CCP::WilksLambda(canon$cor, n_vars, 1))
canon.p_perm <- p.perm(preds, outcome)
n <- 100
n_vars <- 40
outcome <- matrix(rnorm(n), ncol=1)
preds <-
matrix(rnorm(n * n_vars), ncol=n_vars, byrow=FALSE)
canon <- cc(preds, outcome)
str(canon)
canon$cor^2
print(CCP::WilksLambda(canon$cor, n_vars, 1))
canon.p_perm <- p.perm(preds, outcome)
n <- 100
n <- 90
n_vars <- 60
outcome <- matrix(rnorm(n), ncol=1)
preds <-
matrix(rnorm(n * n_vars), ncol=n_vars, byrow=FALSE)
canon <- cc(preds, outcome)
str(canon)
canon$cor^2
print(CCP::WilksLambda(canon$cor, n_vars, 1))
canon.p_perm <- p.perm(preds, outcome)
outcome
?cc
canon$scores
cor.test(canon$scores$xscores, outcome)
canon$scores$xscores
outcome
n <- 50
n_vars <- 40
outcome <- matrix(rnorm(n), ncol=1)
preds <-
matrix(rnorm(n * n_vars), ncol=n_vars, byrow=FALSE)
canon <- cc(preds, outcome)
str(canon)
canon$cor^2
print(CCP::WilksLambda(canon$cor, n_vars, 1))
canon.p_perm <- p.perm(preds, outcome)
canon$scores
cor.test(canon$scores$xscores, outcome)
canon$scores$xscores
str(canon$scores)
cor.test(canon$scores$xscores, canon$scores$yscores)
n <- 69
n_vars <- 40
n <- 69
n_vars <- 40
outcome <- matrix(rnorm(n), ncol=1)
preds <-
matrix(rnorm(n * n_vars), ncol=n_vars, byrow=FALSE)
canon <- cc(preds, outcome)
str(canon)
canon <- CCA::cc(preds, outcome)
str(canon)
canon$cor^2
print(CCP::WilksLambda(canon$cor, n_vars, 1))
canon.p_perm <- p.perm(preds, outcome)
canon.p_perm <- CCP::p.perm(preds, outcome)
canon$scores
cor.test(canon$scores$xscores, outcome)
cor.test(canon$scores$xscores, canon$scores$yscores)
canon.p_perm
# generate n_vars random variables with sample size of n,
# plus a random outcome variable
# and calculate canonical correlation and its significance
n <- 69
n_vars <- 40
outcome <- matrix(rnorm(n), ncol=1)
preds <-
matrix(rnorm(n * n_vars), ncol=n_vars, byrow=FALSE)
canon <- CCA::cc(preds, outcome)
str(canon)
canon$cor^2
print(CCP::WilksLambda(canon$cor, n_vars, 1))
canon.p_perm <- CCP::p.perm(preds, outcome)
canon.p_perm
canon$scores
cor.test(canon$scores$xscores, outcome)
cor.test(canon$scores$xscores, canon$scores$yscores)
canon_simulated <-
replicate(100, sim_canonical(n, n_vars))
sim_canonical <-
function(n, n_vars) {
outcome <- matrix(rnorm(n), ncol=1)
preds <-
matrix(rnorm(n * n_vars), ncol=n_vars, byrow=FALSE)
canon <- CCA::cc(preds, outcome)
canon$cor
}
canon_simulated <-
replicate(100, sim_canonical(n, n_vars))
canon_simulated
hist(canon_simulated)
ggplot2::ggplot(
mapping=aes(x=canon_simulated)) +
ggplot2::geom_histogram()
library(ggplot2)
ggplot(
mapping=aes(x=canon_simulated)) +
geom_histogram()
# generate n_vars random variables with sample size of n,
# plus a random outcome variable
# and calculate canonical correlation and its significance
n <- 69
n_vars <- 40
outcome <- matrix(rnorm(n), ncol=1)
preds <-
matrix(rnorm(n * n_vars), ncol=n_vars, byrow=FALSE)
canon <- CCA::cc(preds, outcome)
str(canon)
canon$cor^2
print(CCP::WilksLambda(canon$cor, n_vars, 1))
canon.p_perm <- CCP::p.perm(preds, outcome)
canon.p_perm
canon$scores
cor.test(canon$scores$xscores, outcome)
cor.test(canon$scores$xscores, canon$scores$yscores)
sim_canonical <-
function(n, n_vars) {
outcome <- matrix(rnorm(n), ncol=1)
preds <-
matrix(rnorm(n * n_vars), ncol=n_vars, byrow=FALSE)
canon <- CCA::cc(preds, outcome)
canon$cor
}
canon_simulated <-
replicate(100, sim_canonical(n, n_vars))
library(ggplot2)
ggplot(
mapping=aes(x=canon_simulated)) +
geom_histogram()
canon_simulated <-
replicate(1000, sim_canonical(n, n_vars))
library(ggplot2)
ggplot(
mapping=aes(x=canon_simulated)) +
geom_histogram()
canon_simulated <-
replicate(10000, sim_canonical(n, n_vars))
ggplot(
mapping=aes(x=canon_simulated)) +
geom_histogram()
?clusterProfiler::enrichGO
canon_simulated
quantile(canon_simulated, 0.975)
quantile(canon_simulated, 0.025)
sqrt(0.56)
library(swirl)
rm(list=ls())
swirl()
TRUE == FALSE
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
x <- 1:10
y <- 1:10
plot(x,y)
prcomp(cbind(x,y))
x <- 1:20
x <- seq(0,20,by=2)
y <- seq(0,20,by=1)
prcomp(cbind(x,y))
y <- seq(0,10,by=1)
prcomp(cbind(x,y))
pr <- prcomp(cbind(x,y))
pr$rotation
pr$rotation[,1]^2
pr$rotation[,2]^2
?2
sqrt(2)
plot(x,y)
prcomp(cbind(x,rep(0,11)))
y <- (1:10) * 2
y
prcomp(cbind(x,y))
x
x <- 1:10
prcomp(cbind(x,y))
x <- 1:10
y <- (1:10) * 2
prcomp(cbind(x,y)
)
x <- matrix(1:100, nrow=10, byrow=FALSE)
x
prcomp(x)
x <- matrix(1:100, nrow=5, byrow=FALSE)
prcomp(x)
x
.2364556901
sqrt(.2364556901)
.2364556901^2
.6690784044 / .325
.7647237023 / (1-.7647237023)
x <- matrix(1:100, nrow=20, byrow=FALSE)
prcomp(x)
x
prcomp(x)$x
pr <- prcomp(x)
x.centered <- scale(x)
x.centered
prcomp(x.centered)
pr
x.centered * pr$rotation
x.centered %*% pr$rotation
pr$x
str(pr)
-21.242646/-3.5906625
?prcomp
x.centered
x
prcomp(x.centered)
prcomp(x)
?prcomp
pr
1.322876e+01
2.236068e^2
2.236068^2
1.322876e1
(1.322876e1)^2
pr$rotation * sqrt(pr$sdev)
x.centered %*% (pr$rotation * sqrt(pr$sdev))
pr$x
x.centered %*% pr$rotation
sqrt(1.322876e1)
-3.5906625 * 3.63
pr <- prcomp(x.centered)
pr$x
x.centered %*% pr$rotation
pr <- prcomp(x)
pr$x
pr$sdev
sqrt(pr$sdev)
pr
str(pr)
pr <- prcomp(x)
pr
pr$x
x
pr$x
x <- matrix(1:100, nrow=5, byrow=FALSE)
pr <- prcomp(x)
pr$x
cov(x)
data(iris)
head(iris)
sub_iris <- iris[,-ncol(iris)]
sub_iris
cen_s_iris <- scale(sub_iris,center=TRUE,scale=FALSE)
cen_s_iris
apply(sub_iris, MARGIN=2, mea)
apply(sub_iris, MARGIN=2, mean)
apply(cen_s_iris, MARGIN=2, mean)
pca <- prcomp(sub_iris, center=TRUE, scale=FALSE)
pca$x[1,"PC1"]
t(cen_s_iris[1,]) %*% pca$rotation[,"PC1"]
cen_s_iris[1,]
pca$rotation[,"PC1"]
t(cen_s_iris[1,])
pca$rotation[,"PC1"]
RNAseQC::calc_PCAs
?calc_PCA
?calc_PCAs
PCA_seqQC <- RNAseQC::calc_PCAs(t(sub_iris), log2_transform = FALSE, center=TRUE, scale=FALSE)
PCA_seqQC$x[1,"PC1"]
t(cen_s_iris[1,]) %*% PCA_seqQC$rotation[,"PC1"]
PCA_seqQC <-
RNAseQC::calc_PCAs(t(sub_iris), log2_transform = FALSE, center=TRUE, scale=FALSE, cpm=FALSE)
PCA_seqQC$x[1,"PC1"]
t(cen_s_iris[1,]) %*% PCA_seqQC$rotation[,"PC1"]
PCA_seqQC$sd
prcomp(sub_iris[1:3,])
apply(cen_s_iris,2,mean)
cov(t(cen_s_iris) %*% cen_s_iris)
eigen(cov(t(cen_s_iris) %*% cen_s_iris))
cov(t(cen_s_iris[1:3,]) %*% cen_s_iris[1:3,])
eigen(cov(t(cen_s_iris[1:3,]) %*% cen_s_iris[1:3,]))
eigen(cov(t(cen_s_iris[1:2,]) %*% cen_s_iris[1:2,]))
t(cen_s_iris[1:3,]) %*% cen_s_iris[1:3,]
eigen(t(cen_s_iris[1:3,]) %*% cen_s_iris[1:3,])
eigen(t(cen_s_iris[1:2,]) %*% cen_s_iris[1:2,])
x <- matrix(1:10 + rnorm(10))
x
y <- matrix(1:10 + rnorm(10))
y
plot(x, y)
x <- matrix(1:10 + rnorm(10, sd=0.5))
y <- matrix(1:10 + rnorm(10, sd=0.5))
plot(x,y)
mat <- rbind(x,y)
mat_cent <- scale(mat, scale=FALSE)
mat <- rbind(x,y)
mat_cent <- scale(mat, scale=FALSE)
mat_cent
mat <- rbind(x,y)
mat
x <- 1:10 + rnorm(10, sd=0.5)
y <- 1:10 + rnorm(10, sd=0.5)
plot(x,y)
mat <- rbind(x,y)
mat
mat_cent <- scale(mat, scale=FALSE)
mat_cent
plot(mat_cent)
plot(mat_cent[1,], mat_cent[2,])
text(mat_cent[1,], mat_cent[2,])
plot(mat_cent[1,], mat_cent[2,], col="white")
text(mat_cent[1,], mat_cent[2,])
?text
text(mat_cent[1,], mat_cent[2,], labels=1:10)
plot(mat_cent[1,], mat_cent[2,], col="white")
text(mat_cent[1,], mat_cent[2,], labels=1:10)
x <- 1:20 + rnorm(20, sd=0.5)
y <- 1:20 + rnorm(20, sd=0.5)
plot(x,y)
mat <- rbind(x,y)
mat_cent <- scale(mat, scale=FALSE)
plot(mat_cent[1,], mat_cent[2,], col="white")
text(mat_cent[1,], mat_cent[2,], labels=1:10)
mat_cent
order(mat_cent[1,])
text(mat_cent[1,], mat_cent[2,], labels=1:20)
plot(mat_cent[1,], mat_cent[2,], col="white")
text(mat_cent[1,], mat_cent[2,], labels=1:20)
plot(x,y, col="white")
text(x,y, labels=1:20)
mat <- rbind(x,y)
mat_cent <- scale(mat, scale=FALSE)
mat_cent
order(mat_cent[1,])
mat <- rbind(x,y)
n <- 20
x <- 1:n + rnorm(n, sd=0.5)
y <- 1:n + rnorm(n, sd=0.5)
mat <- rbind(x,y)
plot(mat[1,], mat[2,], col="white")
text(mat[1,], mat[2,], labels=1:20)
order(mat_cent[1,])
plot(mat_cent[1,], mat_cent[2,], col="white")
text(mat_cent[1,], mat_cent[2,], labels=1:20)
order(mat_cent[1,])
n <- 20
x <- 1:n + rnorm(n, sd=0.5)
y <- 1:n + rnorm(n, sd=0.5)
mat <- rbind(x,y)
plot(mat[1,], mat[2,], col="white")
text(mat[1,], mat[2,], labels=1:20)
mat_cent <- scale(mat, scale=FALSE)
order(mat_cent[1,])
plot(mat_cent[1,], mat_cent[2,], col="white")
text(mat_cent[1,], mat_cent[2,], labels=1:20)
wd.tmp <- getwd()
setwd("/Users/matthewdufort/Box Sync/Tools/R_scripts/R_packages/10Xtools")
devtools::document()
wd.tmp <- getwd()
setwd("/Users/matthewdufort/Box Sync/Tools/R_scripts/R_packages/R10Xtools")
devtools::document()
setwd("..")
devtools::install("10Xtools")
devtools::install("R10Xtools")
setwd(wd.tmp)
rm(wd.tmp)
devtools::install_github("mjdufort/R10Xtools")
?estimate_10X_saturation
estimate_10X_saturation()
estimate_10X_saturation
load_molecule_info_from_path
?load_molecule_info_from_path
?cellrangerRkit::load_molecule_info_from_path
cellrangerRkit::load_molecule_info_from_path
RNAseQC::plot_PCAs
?RNAseQC::plot_PCAs
